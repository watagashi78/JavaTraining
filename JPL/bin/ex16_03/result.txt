class java.lang.String
 public static final Comparator CASE_INSENSITIVE_ORDER
 private final char[] value
 private int hash
 private static final long serialVersionUID
 private static final ObjectStreamField[] serialPersistentFields
 private static final int HASHING_SEED
 private transient int hash32
 public String(byte[])
 public String(byte[],int,int)
 public String(byte[],Charset)
 public String(byte[],String) throws UnsupportedEncodingException
 public String(byte[],int,int,Charset)
 String(int,int,char[])
 String(char[],boolean)
 public String(StringBuilder)
 public String(StringBuffer)
 public String(int[],int,int)
 public String(char[],int,int)
 public String(char[])
 public String(String)
 public String()
 public String(byte[],int,int,String) throws UnsupportedEncodingException
 public String(byte[],int)
 public String(byte[],int,int,int)
 public boolean equals(Object)
 public String toString()
 public int hashCode()
 public int compareTo(String)
 public int compareTo(Object)
 public int indexOf(int)
 public int indexOf(String)
 public int indexOf(int,int)
 public int indexOf(String,int)
 public static String valueOf(long)
 public static String valueOf(float)
 public static String valueOf(char[],int,int)
 public static String valueOf(boolean)
 public static String valueOf(char)
 public static String valueOf(int)
 public static String valueOf(Object)
 public static String valueOf(char[])
 public static String valueOf(double)
 public String replace(char,char)
 public String replace(CharSequence,CharSequence)
 public String replaceAll(String,String)
 public String replaceFirst(String,String)
 public String[] split(String,int)
 public String[] split(String)
 public boolean startsWith(String,int)
 public boolean startsWith(String)
 public CharSequence subSequence(int,int)
 public String substring(int)
 public String substring(int,int)
 public char[] toCharArray()
 public String toLowerCase(Locale)
 public String toLowerCase()
 public String toUpperCase(Locale)
 public String toUpperCase()
 public String trim()
 public char charAt(int)
 public int codePointAt(int)
 public String concat(String)
 public boolean contains(CharSequence)
 public static String copyValueOf(char[])
 public static String copyValueOf(char[],int,int)
 public boolean endsWith(String)
 public static String format(String,Object[])
 public static String format(Locale,String,Object[])
 public byte[] getBytes(Charset)
 public byte[] getBytes(String) throws UnsupportedEncodingException
 public void getBytes(int,int,byte[],int)
 public byte[] getBytes()
 public void getChars(int,int,char[],int)
 public native String intern()
 public boolean isEmpty()
 public int lastIndexOf(String,int)
 public int lastIndexOf(String)
 public int lastIndexOf(int)
 public int lastIndexOf(int,int)
 public int length()
 public boolean matches(String)
 public int codePointBefore(int)
 public int codePointCount(int,int)
 public int compareToIgnoreCase(String)
 public boolean contentEquals(StringBuffer)
 public boolean contentEquals(CharSequence)
 public boolean equalsIgnoreCase(String)
 public int offsetByCodePoints(int,int)
 public boolean regionMatches(int,String,int,int)
 public boolean regionMatches(boolean,int,String,int,int)
 static int indexOf(char[],int,int,char[],int,int,int)
 private static void checkBounds(byte[],int,int)
 void getChars(char[],int)
 int hash32()
 static int lastIndexOf(char[],int,int,char[],int,int,int)
 private int indexOfSupplementary(int,int)
 private int lastIndexOfSupplementary(int,int)